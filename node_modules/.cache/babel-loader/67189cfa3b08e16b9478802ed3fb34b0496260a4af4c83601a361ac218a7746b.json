{"ast":null,"code":"var _jsxFileName = \"/Users/rafsanraqib/Documents/Cambridge Transportations/client/src/Components/DriverSearchForm.js\",\n  _s = $RefreshSig$();\n/**\n * @author Ahmed Rafsan Raqib\n * This component renders the Driver Search form where the user inputs the\n * Driver name, pickup address, pickup time and any notes the patient might have left.\n * Once all the information is entered and the Search button is clicked the system\n * Calculates the nearest driver by comparing patient location with the Driver's current\n * Location and creates an Array with the nearest Drivers available. Redux Store gets\n * Updated with the information.\n */\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport determineLatLongFromAddress from \"../Geolocation/locationServices\";\nimport { determineDistanceBetweenDriverPatient } from \"../Geolocation/locationServices\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DriverSearchByLocation(props) {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const driversList = [];\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      lat,\n      lng\n    } = await determineLatLongFromAddress(patientPickupAddress);\n    var optimumDriverList = [];\n    driversList.forEach(function (driver) {\n      const lat1 = driver.latitude;\n      const lng1 = driver.longitude;\n\n      //Calculate distance between Driver and Patient\n      var distance = determineDistanceBetweenDriverPatient(lat, lng, lat1, lng1);\n      const driverData = {\n        id: driver.driverID,\n        driverName: driver.name,\n        vehicleId: driver.vehicleId,\n        distanceFromPatient: distance.toFixed(1)\n      };\n      optimumDriverList.push(driverData);\n    });\n\n    // Sorting list to display nearest Driver first\n    optimumDriverList.sort(function (a, b) {\n      return a.distanceFromPatient - b.distanceFromPatient;\n    });\n\n    // Sending data to redux store\n    dispatch({\n      type: \"SETPATIENTDATA\",\n      payload: {\n        id: patientInfo,\n        patientPickupAddress,\n        patientPickupTime,\n        patientNotes,\n        optimumDriverList\n      }\n    });\n    navigate(\"/listDrivers\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form-div\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"driver-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: props.label1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => props.label1OnChange(e.target.value),\n        placeholder: props.label1Placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: props.label2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => props.label2OnChange(e.target.value),\n        placeholder: props.label2Placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: props.label3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => props.label3OnChange(e.target.value),\n        placeholder: props.label3Placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: props.label4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => props.label4OnChange(e.target.value),\n        placeholder: props.label4Placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"driver-button\",\n        type: \"submit\",\n        children: \"Drivers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(DriverSearchByLocation, \"ZaVe+Vo7W9FMoQ/aTgBrV7UvA04=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = DriverSearchByLocation;\nvar _c;\n$RefreshReg$(_c, \"DriverSearchByLocation\");","map":{"version":3,"names":["React","useDispatch","useNavigate","determineLatLongFromAddress","determineDistanceBetweenDriverPatient","jsxDEV","_jsxDEV","DriverSearchByLocation","props","_s","navigate","dispatch","driversList","handleSubmit","e","preventDefault","lat","lng","patientPickupAddress","optimumDriverList","forEach","driver","lat1","latitude","lng1","longitude","distance","driverData","id","driverID","driverName","name","vehicleId","distanceFromPatient","toFixed","push","sort","a","b","type","payload","patientInfo","patientPickupTime","patientNotes","className","children","onSubmit","label1","fileName","_jsxFileName","lineNumber","columnNumber","onChange","label1OnChange","target","value","placeholder","label1Placeholder","label2","label2OnChange","label2Placeholder","label3","label3OnChange","label3Placeholder","label4","label4OnChange","label4Placeholder","_c","$RefreshReg$"],"sources":["/Users/rafsanraqib/Documents/Cambridge Transportations/client/src/Components/DriverSearchForm.js"],"sourcesContent":["/**\n * @author Ahmed Rafsan Raqib\n * This component renders the Driver Search form where the user inputs the\n * Driver name, pickup address, pickup time and any notes the patient might have left.\n * Once all the information is entered and the Search button is clicked the system\n * Calculates the nearest driver by comparing patient location with the Driver's current\n * Location and creates an Array with the nearest Drivers available. Redux Store gets\n * Updated with the information.\n */\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport determineLatLongFromAddress from \"../Geolocation/locationServices\";\nimport { determineDistanceBetweenDriverPatient } from \"../Geolocation/locationServices\";\n\nexport default function DriverSearchByLocation(props) {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const driversList = [];\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const { lat, lng } = await determineLatLongFromAddress(\n      patientPickupAddress\n    );\n    var optimumDriverList = [];\n    driversList.forEach(function (driver) {\n      const lat1 = driver.latitude;\n      const lng1 = driver.longitude;\n\n      //Calculate distance between Driver and Patient\n      var distance = determineDistanceBetweenDriverPatient(\n        lat,\n        lng,\n        lat1,\n        lng1\n      );\n      const driverData = {\n        id: driver.driverID,\n        driverName: driver.name,\n        vehicleId: driver.vehicleId,\n        distanceFromPatient: distance.toFixed(1),\n      };\n\n      optimumDriverList.push(driverData);\n    });\n\n    // Sorting list to display nearest Driver first\n    optimumDriverList.sort(function (a, b) {\n      return a.distanceFromPatient - b.distanceFromPatient;\n    });\n\n    // Sending data to redux store\n    dispatch({\n      type: \"SETPATIENTDATA\",\n      payload: {\n        id: patientInfo,\n        patientPickupAddress,\n        patientPickupTime,\n        patientNotes,\n        optimumDriverList,\n      },\n    });\n\n    navigate(\"/listDrivers\");\n  };\n\n  return (\n    <div className=\"auth-form-div\">\n      <form onSubmit={handleSubmit} className=\"driver-form\">\n        <label>{props.label1}</label>\n        <input\n          onChange={(e) => props.label1OnChange(e.target.value)}\n          placeholder={props.label1Placeholder}\n        ></input>\n\n        <label>{props.label2}</label>\n        <input\n          onChange={(e) => props.label2OnChange(e.target.value)}\n          placeholder={props.label2Placeholder}\n        ></input>\n\n        <label>{props.label3}</label>\n        <input\n          onChange={(e) => props.label3OnChange(e.target.value)}\n          placeholder={props.label3Placeholder}\n        ></input>\n\n        <label>{props.label4}</label>\n        <input\n          onChange={(e) => props.label4OnChange(e.target.value)}\n          placeholder={props.label4Placeholder}\n        ></input>\n\n        <button className=\"driver-button\" type=\"submit\">\n          Drivers\n        </button>\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}