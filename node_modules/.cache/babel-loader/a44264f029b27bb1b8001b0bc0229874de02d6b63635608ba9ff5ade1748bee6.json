{"ast":null,"code":"import Geocode from \"react-geocode\";\nGeocode.setLanguage(\"en\");\nGeocode.setRegion(\"es\");\nGeocode.setLocationType(\"ROOFTOP\");\nGeocode.enableDebug();\nconst determineLatLongFromAddress = address => {\n  console.log(address);\n  // // Get latitude & longitude from address.\n  // Geocode.fromAddress(\"Eiffel Tower\").then(\n  //     (response) => {\n  //         const { lat, lng } = response.results[0].geometry.location;\n  //         console.log(lat, lng);\n  //     },\n  //     (error) => {\n  //         console.error(error);\n  //     }\n  // );\n};\n\nconst determineDistanceBetween = (address1, address2) => {\n  //TODO \n};\nexport default determineLatLongFromAddress;","map":{"version":3,"names":["Geocode","setLanguage","setRegion","setLocationType","enableDebug","determineLatLongFromAddress","address","console","log","determineDistanceBetween","address1","address2"],"sources":["/Users/rafsanraqib/Documents/Cambridge Transportations/location-draft/src/Geolocation/locationServices.js"],"sourcesContent":["\nimport Geocode from \"react-geocode\";\n\nGeocode.setLanguage(\"en\");\nGeocode.setRegion(\"es\");\nGeocode.setLocationType(\"ROOFTOP\");\nGeocode.enableDebug();\n\nconst determineLatLongFromAddress = (address) => {\n    console.log(address);\n    // // Get latitude & longitude from address.\n    // Geocode.fromAddress(\"Eiffel Tower\").then(\n    //     (response) => {\n    //         const { lat, lng } = response.results[0].geometry.location;\n    //         console.log(lat, lng);\n    //     },\n    //     (error) => {\n    //         console.error(error);\n    //     }\n    // );\n}\n\nconst determineDistanceBetween = (address1, address2)  => { \n    //TODO \n};\n\n\nexport default determineLatLongFromAddress;"],"mappings":"AACA,OAAOA,OAAO,MAAM,eAAe;AAEnCA,OAAO,CAACC,WAAW,CAAC,IAAI,CAAC;AACzBD,OAAO,CAACE,SAAS,CAAC,IAAI,CAAC;AACvBF,OAAO,CAACG,eAAe,CAAC,SAAS,CAAC;AAClCH,OAAO,CAACI,WAAW,EAAE;AAErB,MAAMC,2BAA2B,GAAIC,OAAO,IAAK;EAC7CC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;EACpB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ,CAAC;;AAED,MAAMG,wBAAwB,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAM;EACtD;AAAA,CACH;AAGD,eAAeN,2BAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}