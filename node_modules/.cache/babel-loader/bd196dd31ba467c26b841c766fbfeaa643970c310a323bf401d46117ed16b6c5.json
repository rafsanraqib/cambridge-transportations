{"ast":null,"code":"var _jsxFileName = \"/Users/rafsanraqib/Documents/Cambridge Transportations/location-draft/src/Components/ListDrivers.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport { useSelector } from 'react-redux';\nimport determineLatLongFromAddress from '../Geolocation/locationServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CheckboxListSecondary() {\n  _s();\n  const address = useSelector(patientData => patientData.pickupAddress);\n  const [driversList, setDriversList] = React.useState([{\n    name: \"Ahmed Rafsan Raqib\",\n    driverID: \"raf97\",\n    location: \"2302 130th Ave NW, Coon Rapids, MN, 55448, USA\",\n    vehicleId: 245\n  }, {\n    name: \"Ahmed Ispahan Raqib\",\n    driverID: \"isp05\",\n    location: \"1282 Concordia Ave, Saint Paul, MN, 55104, USA\",\n    vehicleId: 500\n  }, {\n    name: \"Labiba Nayeem Khan\",\n    driverId: \"lab200\",\n    location: \"300 Washington Ave SE, Minneapolis, MN,55455, USA\",\n    vehicleId: 600\n  }]);\n  const initiateOptimalDriverSearchOperations = () => {\n    let v = calculateNearestDriver();\n  };\n  const calculateNearestDriver = async () => {\n    const {\n      lat,\n      lng\n    } = await determineLatLongFromAddress(address);\n    console.log(\"latitude: \" + lat, \"Longitude: \" + lng);\n    //TODO\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onLoad: initiateOptimalDriverSearchOperations(),\n    children: /*#__PURE__*/_jsxDEV(List, {\n      dense: true,\n      sx: {\n        width: '100%',\n        maxWidth: 360\n      },\n      children: driversList.map(value => {\n        const labelId = `checkbox-list-secondary-label-${value}`;\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n            children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                src: `/static/images/avatar/${value + 1}.jpg`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              id: labelId,\n              primary: value.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }, this);\n}\n_s(CheckboxListSecondary, \"fOG4dr0uis/OFDgg1rXaerUxZ2M=\", false, function () {\n  return [useSelector];\n});\n_c = CheckboxListSecondary;\nvar _c;\n$RefreshReg$(_c, \"CheckboxListSecondary\");","map":{"version":3,"names":["React","List","ListItem","ListItemButton","ListItemText","ListItemAvatar","Avatar","useSelector","determineLatLongFromAddress","jsxDEV","_jsxDEV","CheckboxListSecondary","_s","address","patientData","pickupAddress","driversList","setDriversList","useState","name","driverID","location","vehicleId","driverId","initiateOptimalDriverSearchOperations","v","calculateNearestDriver","lat","lng","console","log","onLoad","children","dense","sx","width","maxWidth","map","value","labelId","src","fileName","_jsxFileName","lineNumber","columnNumber","id","primary","_c","$RefreshReg$"],"sources":["/Users/rafsanraqib/Documents/Cambridge Transportations/location-draft/src/Components/ListDrivers.js"],"sourcesContent":["\nimport * as React from 'react';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\n\nimport { useSelector } from 'react-redux'\nimport determineLatLongFromAddress from '../Geolocation/locationServices'\n\nexport default function CheckboxListSecondary() {\n\n  const address = useSelector(\n    (patientData => patientData.pickupAddress));\n\n  \n\n  const [driversList, setDriversList] = React.useState([\n    {\n      name: \"Ahmed Rafsan Raqib\",\n      driverID: \"raf97\",\n      location: \"2302 130th Ave NW, Coon Rapids, MN, 55448, USA\",\n      vehicleId: 245\n    }, \n    {\n      name: \"Ahmed Ispahan Raqib\",\n      driverID: \"isp05\",\n      location: \"1282 Concordia Ave, Saint Paul, MN, 55104, USA\",\n      vehicleId: 500\n    }, \n    {\n      name: \"Labiba Nayeem Khan\",\n      driverId: \"lab200\",\n      location: \"300 Washington Ave SE, Minneapolis, MN,55455, USA\",\n      vehicleId:600\n    }\n\n  ])\n\n  const initiateOptimalDriverSearchOperations = () => {\n    let v = calculateNearestDriver();\n  }\n\n  const calculateNearestDriver = async() => {\n\n    const {lat, lng} = await determineLatLongFromAddress(address);\n    console.log(\"latitude: \" + lat, \"Longitude: \" + lng);\n    //TODO\n  }\n\n  return (\n  <div onLoad={initiateOptimalDriverSearchOperations()}>\n    <List dense sx={{ width: '100%', maxWidth: 360}}>\n      {driversList.map((value) => {\n        const labelId = `checkbox-list-secondary-label-${value}`;\n        return (\n          <ListItem key={value}>\n            <ListItemButton>\n              <ListItemAvatar>\n                <Avatar\n                  src={`/static/images/avatar/${value + 1}.jpg`}\n                />\n              </ListItemAvatar>\n              <ListItemText id={labelId} primary={value.name} />\n            </ListItemButton>\n          </ListItem>\n        );\n      })}\n    </List>\n  </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}