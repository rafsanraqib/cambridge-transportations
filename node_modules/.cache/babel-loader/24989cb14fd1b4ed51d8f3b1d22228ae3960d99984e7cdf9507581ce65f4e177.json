{"ast":null,"code":"/**\n * @author Ahmed Rafsan Raqib\n * This is the Redux store module. It maintains a global state patientData which is accessible from\n * any component inside the application. The Reducer is reponsible for updating the state with the\n * supplied payload from the components.\n */\nimport { legacy_createStore as createStore } from \"redux\";\nconst patientData = {\n  patientName: null,\n  pickupAddress: null,\n  pickupTime: null,\n  pickupNotes: null,\n  optimumDriversList: null\n};\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : patientData;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"SETPATIENTDATA\":\n      return {\n        ...state,\n        patientName: action.payload.id,\n        pickupAddress: action.payload.patientPickupAddress,\n        pickupTime: action.payload.patientPickupTime,\n        pickupNotes: action.payload.patientNotes,\n        optimumDriversList: action.payload.optimumDriverList\n      };\n    default:\n      return state;\n  }\n};\nexport default createStore(reducer);","map":{"version":3,"names":["legacy_createStore","createStore","patientData","patientName","pickupAddress","pickupTime","pickupNotes","optimumDriversList","reducer","state","arguments","length","undefined","action","type","payload","id","patientPickupAddress","patientPickupTime","patientNotes","optimumDriverList"],"sources":["/Users/rafsanraqib/Documents/Cambridge Transportations LLC./client/src/Redux/reducer.js"],"sourcesContent":["/**\n * @author Ahmed Rafsan Raqib\n * This is the Redux store module. It maintains a global state patientData which is accessible from\n * any component inside the application. The Reducer is reponsible for updating the state with the\n * supplied payload from the components.\n */\nimport { legacy_createStore as createStore } from \"redux\";\n\nconst patientData = {\n  patientName: null,\n  pickupAddress: null,\n  pickupTime: null,\n  pickupNotes: null,\n  optimumDriversList: null,\n};\n\nconst reducer = (state = patientData, action) => {\n  switch (action.type) {\n    case \"SETPATIENTDATA\":\n      return {\n        ...state,\n        patientName: action.payload.id,\n        pickupAddress: action.payload.patientPickupAddress,\n        pickupTime: action.payload.patientPickupTime,\n        pickupNotes: action.payload.patientNotes,\n        optimumDriversList: action.payload.optimumDriverList,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default createStore(reducer);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,kBAAkB,IAAIC,WAAW,QAAQ,OAAO;AAEzD,MAAMC,WAAW,GAAG;EAClBC,WAAW,EAAE,IAAI;EACjBC,aAAa,EAAE,IAAI;EACnBC,UAAU,EAAE,IAAI;EAChBC,WAAW,EAAE,IAAI;EACjBC,kBAAkB,EAAE;AACtB,CAAC;AAED,MAAMC,OAAO,GAAG,SAAAA,CAAA,EAAiC;EAAA,IAAhCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGR,WAAW;EAAA,IAAEW,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC1C,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAK,gBAAgB;MACnB,OAAO;QACL,GAAGL,KAAK;QACRN,WAAW,EAAEU,MAAM,CAACE,OAAO,CAACC,EAAE;QAC9BZ,aAAa,EAAES,MAAM,CAACE,OAAO,CAACE,oBAAoB;QAClDZ,UAAU,EAAEQ,MAAM,CAACE,OAAO,CAACG,iBAAiB;QAC5CZ,WAAW,EAAEO,MAAM,CAACE,OAAO,CAACI,YAAY;QACxCZ,kBAAkB,EAAEM,MAAM,CAACE,OAAO,CAACK;MACrC,CAAC;IAEH;MACE,OAAOX,KAAK;EAAC;AAEnB,CAAC;AAED,eAAeR,WAAW,CAACO,OAAO,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}